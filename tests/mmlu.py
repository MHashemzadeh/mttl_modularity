import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

from mttl.dataloader.mmlu_dataset import format_example_with_augmentation


def test_MMLUDataset():
    icl_prompts = [
        "Find all c in Z_3 such that Z_3[x]/(x^2 + c) is a field.",
        "Statement 1 | If aH is an element of a factor group, then |aH| divides |a|. Statement 2 | If H and K are subgroups of G then HK is a subgroup of G.",
        "Statement 1 | Every element of a group generates a cyclic subgroup of the group. Statement 2 | The symmetric group S_10 has 10 elements.",
        "Statement 1| Every function from a finite set onto itself must be one to one. Statement 2 | Every subgroup of an abelian group is abelian.",
        "Find the characteristic of the ring 2Z.",
    ]
    icl_options = [
        ["0", "1", "2", "3"],
        ["0", "1", "2", "3"],
        ["0", "1", "2", "3"],
        ["0", "1", "2", "3"],
        ["0", "1", "2", "3"],
    ]
    icl_labels = ["B", "B", "C", "A", "A"]
    prompt = "The cyclic subgroup of Z_24 generated by 18 has order"
    options = ["4", "8", "12", "6"]
    label = "C"

    format_example_with_augmentation(
        prompt,
        options,
        label,
        icl_prompts,
        icl_options,
        icl_labels,
        prompt_def="blabla",
        augment_with_prompts=True,
        augment_with_options=True,
    )

    format_example_with_augmentation(
        prompt,
        options,
        label,
        icl_prompts,
        icl_options,
        icl_labels,
        prompt_def="blabla",
        augment_with_prompts=False,
        augment_with_options=False,
    )

    format_example_with_augmentation(
        prompt,
        options,
        label,
        icl_prompts,
        icl_options,
        icl_labels,
        prompt_def="blabla",
        augment_with_prompts=False,
        augment_with_options=True,
    )

    format_example_with_augmentation(
        prompt,
        options,
        label,
        icl_prompts,
        icl_options,
        icl_labels,
        prompt_def="blabla",
        augment_with_prompts=True,
        augment_with_options=False,
    )
